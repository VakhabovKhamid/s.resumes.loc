{#
/**
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @since         2.0.0
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 */
#}
{% set fields = Bake.filterFields(fields, schema, modelObject) %}
<h2><?= __('{{ action|humanize }} {{ singularHumanName }}') ?></h2>
<hr>
<div class="clearfix">
    <div class="pull-left">
        <div class="btn-group group-control">
            <?= $this->Html->link(__('List {{ pluralHumanName }}'), ['action' => 'index'],['escape' => false,'class' => 'btn btn-default']) ?>
        </div>
    </div>
</div>
<br>
<div class="row">
    <div class="col-md-4">
        <?= $this->Form->create(${{ singularVar }}) ?>
            {% for field in fields if field not in primaryKey %}
                {%- if keyFields[field] %}
                    {%- set fieldData = Bake.columnData(field, schema) %}
                    {%- if fieldData.null %}
                        <div class="form-group">
                            <?= $this->Form->control('{{ field }}', ['options' => ${{ keyFields[field] }}, 'empty' => true, 'class' => 'form-control']);?>
                        </div>
                        {{- "\n" }}
                    {%- else %}
                        <div class="form-group">
                            <?= $this->Form->control('{{ field }}', ['options' => ${{ keyFields[field] }}, 'class' => 'form-control']);?>
                        </div>
                        {{- "\n" }}
                    {%- endif %}
                {%- elseif field not in ['created', 'modified', 'updated', 'created_by', 'modified_by'] %}
                    {%- set fieldData = Bake.columnData(field, schema) %}
                    {%- if fieldData.type in ['date', 'datetime', 'time'] and fieldData.null %}
                        <div class="form-group">
                            <?= $this->Form->control('{{ field }}', ['empty' => true, 'class' => 'form-control']); ?>
                        </div>
                        {{- "\n" }}
                    {%- else %}
                        <div class="form-group">
                            <?= $this->Form->control('{{ field }}', ['class' => 'form-control']);?>
                        </div>
                {{- "\n" }}
                    {%- endif %}
                {%- endif %}
            {%- endfor %}

            {%- if associations.BelongsToMany %}
                {%- for assocName, assocData in associations.BelongsToMany %}
                        <div class="form-group">
                            <?= $this->Form->control('{{ assocData.property }}._ids', ['options' => ${{ assocData.variable }}, 'class' => 'form-control']);?>
                        </div>
                {{- "\n" }}
                {%- endfor %}
            {% endif %}

            <div class="text-right">
                <?= $this->Form->button(__('Submit'), ['class' => 'btn btn-success']) ?>
            </div>

        <?= $this->Form->end() ?>
    </div>
</div>
